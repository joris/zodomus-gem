=begin
#Zodomus channel manager API

#Zodomus is a channel manager API for OTA's access (Booking, Expedia, Airbnb, ...)  # Introduction In this API reference you have a list of Zodomus API's       # Authentication To start using Zodomus you should get your API Keys in the development tab.\\ You will have Test and Production API Keys (only after testing).\\ To access credit card information use you API Key (test or production) with the special **credit card password**. 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Zodomus::RatesAndAvailabilityApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RatesAndAvailabilityApi' do
  before do
    # run before each test
    @api_instance = Zodomus::RatesAndAvailabilityApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RatesAndAvailabilityApi' do
    it 'should create an instance of RatesAndAvailabilityApi' do
      expect(@api_instance).to be_instance_of(Zodomus::RatesAndAvailabilityApi)
    end
  end

  # unit tests for availability_get
  # Get the rooms availability for the corresponding channel / property / dates
  # Get the rooms availability for the corresponding channel / property / dates
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param date_from Starting date to get availability
  # @param date_to Ending date to get availability
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'availability_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for availability_post
  # Set your availability in the defined channel / property / room
  # Set your availability in the defined channel / property / room
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'availability_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rates_derived_post
  # Set rates (derived) for your channel / property / room /rate
  # Used in Booking channel only on derived prices
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'rates_derived_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rates_post
  # Set rates for your channel / property / room /rate
  # Set rates according to the price model defined in the channel property&lt;br&gt; Some parameters depend on the price model. Please check documentation
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'rates_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for room_rates_get
  # Get a list of rooms and rates for the corresponding channel / property
  # Get a list of rooms and rates for the corresponding channel / property
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param [Hash] opts the optional parameters
  # @return [RoomRatesResponse]
  describe 'room_rates_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

=begin
#Zodomus channel manager API

#Zodomus is a channel manager API for OTA's access (Booking, Expedia, Airbnb, ...)  # Introduction In this API reference you have a list of Zodomus API's       # Authentication To start using Zodomus you should get your API Keys in the development tab.\\ You will have Test and Production API Keys (only after testing).\\ To access credit card information use you API Key (test or production) with the special **credit card password**. 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Zodomus::ReservationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReservationApi' do
  before do
    # run before each test
    @api_instance = Zodomus::ReservationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReservationApi' do
    it 'should create an instance of ReservationApi' do
      expect(@api_instance).to be_instance_of(Zodomus::ReservationApi)
    end
  end

  # unit tests for reservations_cc_get
  # Get a reservation credit card info.
  # Get a reservation credit card info. You need a special key password to access this API. Check your backoffice for more informationa about your API Keys
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param reservation_id Reservation id supplied by the channel in reservations-queue
  # @param [Hash] opts the optional parameters
  # @return [ReservationsCCResponse]
  describe 'reservations_cc_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reservations_createtest_post
  # Create a test reservation for your test property
  # Creates a test reservation. status can be &#39;new&#39;, &#39;modified&#39; or &#39;cancelled&#39;. Optionally you can set a new reservation id
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'reservations_createtest_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reservations_get
  # Get a reservation
  # Get a reservation complete information. The credit card information can be obtained in another API
  # @param channel_id Channel id string
  # @param property_id Property id supplied by the channel
  # @param reservation_id Reservation id supplied by the channel in reservations-queue
  # @param [Hash] opts the optional parameters
  # @return [ReservationsResponse]
  describe 'reservations_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reservations_queue_get
  # Get a list of reservations
  # Get a list of new, modified or cancelled reservations made by the channel
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param [Hash] opts the optional parameters
  # @return [ReservationsQueueResponse]
  describe 'reservations_queue_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reservations_summary_get
  # Get a list of future reservations
  # Get a list of reservations scheduled for future dates that were created before your connection to this channel manager
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param [Hash] opts the optional parameters
  # @return [ReservationsSummaryResponse]
  describe 'reservations_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

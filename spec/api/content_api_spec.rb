=begin
#Zodomus channel manager API

#Zodomus is a channel manager API for OTA's access (Booking, Expedia, Airbnb, ...)  # Introduction In this API reference you have a list of Zodomus API's       # Authentication To start using Zodomus you should get your API Keys in the development tab.\\ You will have Test and Production API Keys (only after testing).\\ To access credit card information use you API Key (test or production) with the special **credit card password**. 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Zodomus::ContentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContentApi' do
  before do
    # run before each test
    @api_instance = Zodomus::ContentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContentApi' do
    it 'should create an instance of ContentApi' do
      expect(@api_instance).to be_instance_of(Zodomus::ContentApi)
    end
  end

  # unit tests for product_post
  # Create, modify or delete a product (only used in Booking)
  # Create, modify or delete a product (only used in Booking)
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'product_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for property_get
  # Get property details (used only on Expedia)
  # Get property details (used only on Expedia)
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'property_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for property_post
  # Create or modify a property (used only in Booking)
  # Create or modify a property (used only in Booking)
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'property_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for property_status_post
  # Set property status or check property (used only on Booking)
  # Set property status or check property (used only on Booking)
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'property_status_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rate_get
  # Get rate details (used only on Expedia)
  # Get rate details (used only on Expedia)
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param room_id Room id supplied by the channel
  # @param rate_id Rate id supplied by the channel
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'rate_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for rate_post
  # Create, modify or delete a rate
  # Create, modify or delete a rate
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'rate_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for room_get
  # Get room details (used only on Expedia)
  # Get room details (used only on Expedia)
  # @param channel_id Channel id
  # @param property_id Property id supplied by the channel
  # @param room_id Room id supplied by the channel
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'room_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for room_post
  # Create or modify a room
  # Create or modify a room
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'room_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for room_status_post
  # Set room status (used only on Booking)
  # Set room status (used only on Booking)
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'room_status_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
